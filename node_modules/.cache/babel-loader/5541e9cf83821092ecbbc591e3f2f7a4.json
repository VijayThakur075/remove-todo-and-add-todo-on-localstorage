{"ast":null,"code":"var _jsxFileName = \"/home/developer/localstorage-todo/src/component/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTodo, setUser } from '../action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = () => {\n  _s();\n\n  const AddData = useSelector(state => state.addTodo.userInfo);\n  const userData = useSelector(state => state.setUsers.data);\n  console.log(AddData);\n  const dispatch = useDispatch();\n  const {\n    name,\n    email,\n    password\n  } = AddData;\n\n  const handelRemove = index => {\n    //  localStorage.removeItem('data')\n    const updatedindex = userData.filter(elem => {\n      return index !== elem.id;\n      localStorage.setItem;\n    }); //  dispatch(setUser(updatedindex))\n    // window.location.reload()\n  };\n\n  const handleChange = e => {\n    // const   id= [new Date().getTime().toString() ]\n    dispatch(addTodo({ ...AddData,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(setUser(AddData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"email :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), userData.reverse().map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"id:\", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"name:\", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"email:\", item.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"password:\", item.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handelRemove(item.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"OV4poUekfbPbeGuh/Jp2VtOYlVU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/developer/localstorage-todo/src/component/Todo.js"],"names":["React","useSelector","useDispatch","addTodo","setUser","Todo","AddData","state","userInfo","userData","setUsers","data","console","log","dispatch","name","email","password","handelRemove","index","updatedindex","filter","elem","id","localStorage","setItem","handleChange","e","target","value","handleSubmit","preventDefault","reverse","map","item"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addTodo, setUser } from '../action';\n\n\nexport const Todo = () => {\n    const AddData = useSelector(state => state.addTodo.userInfo);\n    const userData = useSelector(state => state.setUsers.data)\n\n    console.log(AddData);\n    const dispatch = useDispatch();\n\n    const { name, email, password } = AddData;\n\n    const handelRemove = (index) => {\n        //  localStorage.removeItem('data')\n        const updatedindex = userData.filter((elem)=>{\n            return index !== elem.id\n            localStorage.setItem\n        })\n\n        //  dispatch(setUser(updatedindex))\n        // window.location.reload()\n    }\n\n    const handleChange = (e) => {\n        // const   id= [new Date().getTime().toString() ]\n        dispatch(addTodo({ ...AddData, [e.target.name]: e.target.value }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(setUser(AddData));\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>name :</label>\n                <input type=\"text\" name='name' value={name} onChange={handleChange} />\n                <label>email :</label>\n                <input type=\"text\" name='email' value={email} onChange={handleChange} />\n                <label>password :</label>\n                <input type=\"text\" name='password' value={password} onChange={handleChange} />\n\n                <input type=\"submit\" value='submit' />\n            </form>\n\n            {\n                userData.reverse().map((item) => (\n                    <div>\n                        <ul key={item.id}>\n                            <li>id:{item.id}</li>\n                            <li>name:{item.name}</li>\n                            <li>email:{item.email}</li>\n                            <li>password:{item.password}</li>\n                            <button onClick={(e) => handelRemove(item.id)}>delete</button>\n\n                        </ul>\n                    </div>\n\n                ))\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}